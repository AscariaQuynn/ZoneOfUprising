

- brzdeni bocniho pohybu ma nastarosti vylucne engines control
- otaceni za cilem ma nastarosti engines control, ktera vraci dot product z rotace (getRequiredRotationDot)
- rotation pid nema nastarosti brzdeni rotace, to se bude vypocitavat uvnitr engines control

- engines control bude mit metody getLinearVelocityDot a getRotationDot, ktere bude nepretrzite nastavovat
  v zavislosti na tom, jak moc je smer lodi mimo od pozadovaneho smeru (lod driftuje),
  nebo je jeji cumak mimo od pozadovane rotace (lod kouka jinam nez chceme)

- pokud bude vypnuty rotation control nebo movement control, vyse uvedene metody budou vracet
  vzdy 1f, protoze budeme predpokladat, ze se lod vzdy kouka ci leti spravne


- arrival pouziva engines control na ruseni bocniho pohybu a enginescontrol's
  rotacni dot na urceni jestli zazehnout zadni trysky
  bude nastavovat motorum required rotation a zazehavat trysky motoru

- aimcontrol pouziva engines control na zamireni pozadovane rotace lodi
  tzn bude jen nastavovat required rotation motorum

- nejak vymyslet, aby bylo mozno zadavat motorum i tah, aby nebyl vzdy 100%

- movement compensator nesmi prekrocit hodnotu linearni hybnosti
- rotation compensator nesmi prekrocit hodnotu angularni hybnosti


- dodatecny nastaveni lode jako pole v jednom argumentu
- doresit brzdeni bocniho pohybu
- rotacni pohyb nastavit nejake brzdici minimum aby se brzdici sila nezmensovala do nekonecna

- sjednotit synchronizaci projektilu a lode do jednoho pole
- pridat do entity profilu zbrane jako pole
- pridat metody set float get float atd pro ty json parametry
- - nebo argument string pro nastavovani druhotnych veci